---
title: "2.3 — Cost Minimization — Appendix"
execute:
  freeze: auto
page-layout: full
---

```{r}
#| echo: false
#| warning: false
#| message: false
library(tidyverse)
library(ggrepel)
knitr::opts_chunk$set(message = F,
                      warning = F,
                      echo = F,
                      fig.retina = 3,
                      fig.align = "center")
```

## A Change in Relative Factor Prices

If an input (labor or capital) changes in price, we saw that it rotated the isocost line by changing the slope, and the intercept for that input. How does it affect the cost-minimizing (optimal) combination of inputs?

It turns out, a change in one input's price relative to the other is likely to change the ratio of inputs, as well as the total cost of production due to the mathematics and geometry of cost minimization. Recall the cost-minimizing combination of inputs occurs where the slope of the isoquant is equal to the slope of the lowest isocost line tangent to the isoquant. In the graph below, this occurs at point $A$.

Then, suppose the price of labor $w$ increases from $2 to $4. This causes a move along the isoquant from $A$ to $B$, the firm substitutes more capital for labor, and this costs more!

```{r}
library(tidyverse)
points_opt<-tribble(
  ~letter, ~x, ~y,
  "A", 10, 5,
  "B", 7, 7
)

iq_opt=function(x){50/x}
IC_10=function(x){10-0.5*x}
IC_10_2=function(x){10-x}
IC_14=function(x){14-x}

ggplot(data.frame(x=c(0,10)), aes(x=x))+
  stat_function(fun=iq_opt, geom="line", size=2, color = "#3CBB75FF")+
  stat_function(fun=IC_10, geom="line", size=2, color = "red")+
  stat_function(fun=IC_10_2, geom="line", size=2, color = "darkred", linetype="dashed", alpha=0.5)+
  geom_label(aes(x=3,y=iq_opt(3)), color = "#3CBB75FF", label=expression(q^"*"==sqrt(50)), size = 5)+
  geom_label(aes(x=2.5,y=IC_10(2.5)), color = "red", label="C=$40", size = 5)+
  # new cost line and label
  stat_function(fun=IC_14, geom="line", size=2, color = "darkred")+
  geom_label(aes(x=2.5,y=IC_14(2.5)), color = "darkred", label="C=$56", size = 5)+
  # arrow
  annotate("segment", x = 10, xend = 7, y = 5, yend = 7, color = "purple", size=2, alpha=0.9, arrow=arrow(length=unit(0.5,"cm"), ends="last", type="closed"))+
  geom_point(data = points_opt,
             mapping=aes(x=x, y=y),
             size = 3)+
  geom_text(data = points_opt,
             mapping=aes(x=x, y=(y+1.5),
             label = letter),
             size = 6)+
  # old point A lines
  geom_segment(aes(x = 0, xend = 10, y = 5, yend=5), linetype="dotted", size=1)+
  geom_segment(aes(x = 10, xend = 10, y = 5, yend=0), linetype="dotted", size=1)+
  # new point B lines
  geom_segment(aes(x = 0, xend = 7, y = 7, yend=7), linetype="dotted", size=1)+
  geom_segment(aes(x = 7, xend = 7, y = 7, yend=0), linetype="dotted", size=1)+
  
    scale_x_continuous(breaks=seq(0,20,2),
                     limits=c(0,20),
                     expand=expand_scale(mult=c(0,0.1)))+
  scale_y_continuous(breaks=seq(0,20,2),
                     limits=c(0,20),
                     expand=expand_scale(mult=c(0,0.1)))+
  #scale_colour_manual("Curves", values = line_colors, guide=F)+
  labs(x = "Labor",
       y = "Capital",
       title = "A Rise in Wages",
       subtitle = "Move along isoquant to higher total cost",
       caption = expression(paste(q==sqrt(lk), ", ", q^"*"==sqrt(50), ", ", w[1], "= $2, ", w[2], ", = $4, ", r," = $4", sep=" ")))+
  theme_classic(base_family = "Fira Sans Condensed", base_size=16)
```

Why does the optimal isocost line rotate along *both* axes (i.e. *both* axis-endpoints change)? With the budget constraint, we saw a change in one price caused the budget constraint to rotate and change an endpoint only along the axis with the good that changed in price.

Here, recall that the isoquant is unmovable - this is the set optimal quantity we want to produce. If an input were to change in price, that would rotate the isocost line and change only the intercept of that input that changed in price, as with a budget constraint. However, that new line (dashed darker red line) would *not* be tangent to our original budget constraint anymore - that is, we could not produce the output we want at the *same* total cost as before. Thus, it must be on a *new* isocost line (indicating a *different* total cost), just with the same slope as the new isocost line after the price change.

Note you could also go in the other direction. Begin at point $B$ and suppose the price of labor *decreases* (or perhaps the price of capital *increases*). Then, the firm will substitute more labor for capital, and this will cost less!

## Improvements in Technology

We defined our original production function as including an "input" called "[total factor productivity](https://en.wikipedia.org/wiki/Total_factor_productivity)." In our Cobb-Douglas case, we included it in our function as $A$, as in:
$$q=Ak^\alpha l^\beta$$

Now let's see how this affects production. Suppose the firm wants to produce 100 units of output at a particular set of input prices, with the following technology (represented by the production function):
$$q=k^{0.5}l^{0.5}$$
```{r, fig.retina=3}
points_tech1<-tribble(
  ~letter, ~x, ~y,
  "A", 100, 100
)

iq_tech_opt=function(x){10000/x}
IC_tech_min=function(x){200-x}

ggplot(data.frame(x=c(0,10)), aes(x=x))+
  stat_function(fun=iq_tech_opt, geom="line", size=2, color = "#3CBB75FF")+
  stat_function(fun=IC_tech_min, geom="line", size=2, color = "red")+
  geom_label(aes(x=250,y=iq_tech_opt(250)), color = "#3CBB75FF", label=expression(q^"*"==100), size = 4)+
  geom_label(aes(x=25,y=IC_tech_min(25)), color = "red", label="C=$2000", size = 4)+
  geom_point(data = points_tech1,
             mapping=aes(x=x, y=y),
             size = 3)+
  geom_text(data = points_tech1,
             mapping=aes(x=x, y=(y+25),
             label = letter),
             size = 6)+
  # old point A lines
  geom_segment(aes(x = 0, xend = 100, y = 100, yend=100), linetype="dotted", size=1)+
  geom_segment(aes(x = 100, xend = 100, y = 100, yend=0), linetype="dotted", size=1)+
    scale_x_continuous(breaks=seq(0,250,50),
                     limits=c(0,250),
                     expand=expand_scale(mult=c(0,0.1)))+
  scale_y_continuous(breaks=seq(0,250,50),
                     limits=c(0,250),
                     expand=expand_scale(mult=c(0,0.1)))+
  #scale_colour_manual("Curves", values = line_colors, guide=F)+
  labs(x = "Labor",
       y = "Capital",
       title = "Original Technology",
       subtitle = "Cost-min. combo of inputs to produce 100 units",
       caption = expression(paste(q==k^{0.5}*l^{0.5}, ", ", q^"*"==100, ", w= $10 , ","r = $10", sep=" ")))+
  theme_classic(base_family = "Fira Sans Condensed", base_size=16)
```

Then the firm's "technology" improves, such that its new production function is

$$q=2k^{0.5}l^{0.5}$$

Notice total factor productivity $(A)$ has doubled, such that, for the same amount of inputs $l$ and $k$, the firm can now produce *twice* as much output $(2q)$. So suppose again the firm still wishes to produce $q^*=100$, the same as before. Under the new technology, the firm can **produce the same output with fewer inputs**. This is the definition of productivity increases or, for an entire economy, economic growth.

```{r, fig.retina=3}
points_tech2<-tribble(
  ~letter, ~x, ~y,
  "A", 100, 100,
  "B", 50, 50
)

iq_tech_opt_2=function(x){2500/x}
IC_tech_min_2=function(x){100-x}

ggplot(data.frame(x=c(0,10)), aes(x=x))+
  stat_function(fun=iq_tech_opt, geom="line", size=2, color = "#3CBB75FF")+
  stat_function(fun=iq_tech_opt_2, geom="line", size=2, color = "green")+
  stat_function(fun=IC_tech_min, geom="line", size=2, color = "red")+
  stat_function(fun=IC_tech_min_2, geom="line", size=2, color = "pink")+
  geom_label(aes(x=200,y=(iq_tech_opt(200)+10)), color = "#3CBB75FF", label=expression(paste(q^"*"==100, ", Tech 1")), size = 4)+
  geom_label(aes(x=200,y=iq_tech_opt_2(200)), color = "green", label=expression(paste(q^"*"==100, ", Tech 2")), size = 4)+
  geom_label(aes(x=25,y=IC_tech_min(25)), color = "red", label="C=$2000", size = 4)+
  geom_label(aes(x=25,y=IC_tech_min_2(25)), color = "pink", label="C=$1000", size = 4)+
  geom_point(data = points_tech2,
             mapping=aes(x=x, y=y),
             size = 3)+
  geom_text(data = points_tech2,
             mapping=aes(x=x, y=(y+25),
             label = letter),
             size = 6)+
  # old point A lines
  geom_segment(aes(x = 0, xend = 100, y = 100, yend=100), linetype="dotted", size=1)+
  geom_segment(aes(x = 100, xend = 100, y = 100, yend=0), linetype="dotted", size=1)+
  # new point B lines
  geom_segment(aes(x = 0, xend = 50, y = 50, yend=50), linetype="dotted", size=1)+
  geom_segment(aes(x = 50, xend = 50, y = 50, yend=0), linetype="dotted", size=1)+
    scale_x_continuous(breaks=seq(0,250,50),
                     limits=c(0,250),
                     expand=expand_scale(mult=c(0,0.1)))+
  scale_y_continuous(breaks=seq(0,250,50),
                     limits=c(0,250),
                     expand=expand_scale(mult=c(0,0.1)))+
  #scale_colour_manual("Curves", values = line_colors, guide=F)+
  labs(x = "Labor",
       y = "Capital",
       title = "Better Technology",
       subtitle = "Lowers Cost-min. combo to produce 100 units",
       caption = expression(paste(q==2*k^{0.5}*l^{0.5}, ", ", q^"*"==100, ", w= $10 , ","r = $10", sep=" ")))+
  theme_classic(base_family = "Fira Sans Condensed", base_size=16)
```

## Returns to Scale: Proof of Exponents Trick

Consider a Cobb-Douglas production function
$$f(k,l) =k^\alpha l^\beta$$

Now scale this function by some scalar $t>0$, by multiplying both $l$ and $k$, and also output $q$, by $t$:
\begin{align*}
tq& \lesseqgtr (tk)^\alpha (tl)^\beta \\
tq& \lesseqgtr t^{\alpha+\beta}k^\alpha l^\beta \\
tq& \lesseqgtr t^{\alpha+\beta}f(l,k) \\
\end{align*}

This implies that:
$$\begin{cases}
tq>t^{\alpha+\beta}f(l,k) & \iff \alpha+\beta < 1 & \text{Decreasing returns to scale}\\
tq=t^{\alpha+\beta}f(l,k) & \iff \alpha+\beta = 1 & \text{Constant returns to scale}\\
tq<t^{\alpha+\beta}f(l,k) & \iff \alpha+\beta > 1 & \text{Increasing returns to scale}\\
\end{cases}$$

<!--### Elasticity of Scale

Returns to scale has so far been used to describe a technology *globally*, that is, over the entire range of the production function $q=f(k,l)$. It is equally possible that the returns to scale can change *at different scales* or ranges of output, so we often want to estimate the returns to scale *locally*, for some narrow range of production. The **elasticity of scale** measures the percent increase in output $q$ from a 1% change in scale (i.e. a 1% increase in all inputs, $l$ and $k)$:
$$\epsilon_{q,t}=\frac{\% \Delta q}{\% \Delta t} = \cfrac{\frac{\Delta q}{q}}{\frac{\Delta t}{t}}$$-->